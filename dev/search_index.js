var documenterSearchIndex = {"docs":
[{"location":"ecosystem/#Julia's-Physics-ecosystem-1","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"","category":"section"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"JuliaPhysics (a physics organization)","category":"page"},{"location":"ecosystem/#Dealing-with-physical-quantities-1","page":"Julia's Physics ecosystem","title":"Dealing with physical quantities","text":"","category":"section"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"JuliaPhysics:\nMeasurements.jl: Error","category":"page"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"propagation library","category":"page"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"PhysicalConstants:","category":"page"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"Collection of fundamental physical constants, with physical units and\nuncertainties","category":"page"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"Unitful.jl: Physical quantities with arbitrary units\nNaturallyUnitful.jl: Facilities for using natural units with Unitful.jl","category":"page"},{"location":"ecosystem/#Differential-equations-1","page":"Julia's Physics ecosystem","title":"Differential equations","text":"","category":"section"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"DifferentialEquations.jl: Julia suite for high-performance solvers of differential equations\nDiffEqPhysics.jl: A library for building differential equations arising from physical problems\nDiffEqOperators.jl: Linear operators for discretizations of differential equations\nModelingToolkit.jl: A toolkit for modeling and creating DSLs for Scientific Computing in Julia","category":"page"},{"location":"ecosystem/#TODOS-here-1","page":"Julia's Physics ecosystem","title":"TODOS here","text":"","category":"section"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"Short tutorial with common physics problems\nOverview of DiffEqPhysics and FDM with DiffEq\nhow to use ModellingToolkit by @ChrisRackauckas and @HarrisonGrodin if possible...with special reference to constructing systems of diffeq programatically","category":"page"},{"location":"ecosystem/#Dynamical-systems-analysis-1","page":"Julia's Physics ecosystem","title":"Dynamical systems analysis","text":"","category":"section"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"JuliaDynamics\nDynamicalSystems.jl: A Julia software library for chaos and nonlinear dynamics\nChaosTools.jl: Tools for the exploration of chaos and nonlinear dynamics\nDelayEmbeddings.jl: Delay coordinates embedding, Datasets and neighborhoods\nPyDSTool.jl: A wrapper for the PyDSTool library","category":"page"},{"location":"ecosystem/#Astronomy-1","page":"Julia's Physics ecosystem","title":"Astronomy","text":"","category":"section"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"JuliaAstro","category":"page"},{"location":"ecosystem/#Quantum-mechanics-1","page":"Julia's Physics ecosystem","title":"Quantum mechanics","text":"","category":"section"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"JuliaQuantum (few recent updates as of 2019)\nYao.jl\nQuantumOptics.jl","category":"page"},{"location":"ecosystem/#Finite-element-analysis-1","page":"Julia's Physics ecosystem","title":"Finite element analysis","text":"","category":"section"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"JuAFEM.jl\nJuliaFEM.jl\nFENiCS.jl","category":"page"},{"location":"ecosystem/#Solid-state-1","page":"Julia's Physics ecosystem","title":"Solid state","text":"","category":"section"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"JuliaAtoms Atomic physics\nlibAtoms Materials-modelling + FEM orientated libraries\nJuLIPMaterials collection of Julia tools for materials science\nJuLIP library for Interatomic Potentials\nCarrierCapture.jl Semi-classical recombination in semiconductors.\nPolaronMobility.jl - Feynman variational path-integral model for the Fr√∂hlich polaron","category":"page"},{"location":"ecosystem/#Tensors-1","page":"Julia's Physics ecosystem","title":"Tensors","text":"","category":"section"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"ITensors.jl\nTensorOperations.jl\nEinsum.jl\nThat new Einsum library for more automatic differentiation?","category":"page"},{"location":"ecosystem/#Plotting-1","page":"Julia's Physics ecosystem","title":"Plotting","text":"","category":"section"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"Visualization is one of the most important tools in our toolkit. There are three main plotting packages in Julia:","category":"page"},{"location":"ecosystem/#","page":"Julia's Physics ecosystem","title":"Julia's Physics ecosystem","text":"Plots.jl: Very intuitive and convenient, Plots.jl is a wrapper around several plotting backends.  Plots tries to figure out what you want it to do, not just what you tell it.\nMakie.jl: Built around the idea of fast, interactive plotting utilizing the speed of OpenGL and the GPU (and WebGL now), Makie.jl is a next-generation plotting package which offers superior interactivity and speed.   It's great for building interactive or animated visualzations with minimal overhead, but the time to first plot is a little slow compared to Plots, and it isn't quite as feature-complete.  Written in pure Julia.\nPyPlot.jl: A wrapper around the PyPlot interface to the popular Python plotting library matplotlib.","category":"page"},{"location":"#JuliaPhysics-1","page":"JuliaPhysics","title":"JuliaPhysics","text":"","category":"section"},{"location":"#","page":"JuliaPhysics","title":"JuliaPhysics","text":"Welcome to the homepage of JuliaPhysics, a Julia organization for physics-related packages.","category":"page"},{"location":"#","page":"JuliaPhysics","title":"JuliaPhysics","text":"Julia has a large ecosystem built around scientific computing, and in the section Ecosystem we've aimed to give a overview of packages in the ecosystem that can be useful for physical computing.","category":"page"},{"location":"#","page":"JuliaPhysics","title":"JuliaPhysics","text":"JuliaPhysics itself hosts several packages, which are listed here: ######################################## TODO FIXME list packages","category":"page"}]
}
